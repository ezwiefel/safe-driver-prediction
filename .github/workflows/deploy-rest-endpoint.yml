name: Deploy Model

on: 
  repository_dispatch:
    types: [model-registered]
  push:
    branches:
      - develop

env:
  PROD_ENDPOINT_NAME: prod-endpoint-driver-safety
  # MODEL_NAME: ${{ github.event.client_payload.data.modelName }}
  # MODEL_VERSION: ${{ github.event.client_payload.data.modelVersion }}
  MODEL_NAME: SafeDriverModel
  MODEL_VERSION: 1
  RC_DEPLOYMENT_NAME: 'run-${{ github.run_number }}-${{ github.run_attempt }}'

jobs:
  get-prod-details:
    name: Get Prod Details (and Deploy if Not Exists)
    runs-on: ubuntu-latest
    environment: No Traffic
    outputs:
        prod_deployment_name: ${{ steps.get_prod_details.outputs.prod_deployment_name }}
        prod_exists: ${{ steps.get_prod_details.outputs.prod_exists }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python Environment
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: Install Python Build Agent Dependencies
        run: |
          pip install pip==20.2.3
          pip install -r ./.github/workflows/build-requirements.txt

      - name: Azure Login
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az login --service-principal --username ${{ secrets.MLOPS_SP_ID }} --password ${{ secrets.MLOPS_SP_PASSWORD }} --tenant ${{ secrets.MLOPS_SP_TENANT_ID }}

      - name: Install Az ML CLI v2
        run: |
          az extension add --name ml

      - name: Set AML Defaults
        run: |
          az configure --defaults group=${{ secrets.AML_WORKSPACE }}  workspace=${{ secrets.AML_RESOURCE_GROUP }}
          set az account set -s ${{ secrets.AML_SUBSCRIPTION }}  

      - name: Create Endpoint if not exists
      # az login --service-principal --username ${{ secrets.MLOPS_SP_ID }} --password ${{ secrets.MLOPS_SP_PASSWORD }} --tenant ${{ secrets.MLOPS_SP_TENANT_ID }}
        run: | 
          az ml online-endpoint list -o tsv --query "[?name=='$PROD_ENDPOINT_NAME'][name]" > endpoint-name.txt    
          export ENDPOINT_EXISTS=$(cat endpoint-name.txt |  wc -l)

          if [[ ENDPOINT_EXISTS -ne 1 ]]; then
            az ml online-endpoint create --name $PROD_ENDPOINT_NAME --file ./safe-driver/src/deploy/online-endpoint.yaml         
          else
            echo "endpoint exists"
          fi

      - name: Get Prod Deployment Name
        id: get_prod_details
        run: |
          az login --service-principal --username ${{ secrets.MLOPS_SP_ID }} --password ${{ secrets.MLOPS_SP_PASSWORD }} --tenant ${{ secrets.MLOPS_SP_TENANT_ID }}
          az ml online-endpoint show --name $PROD_ENDPOINT_NAME --query 'tags.prod_deployment' > prod-deployment-name.txt
          export PROD_TAG_EXISTS=$(cat prod-deployment-name.txt | wc -l)
          
          if [[ PROD_TAG_EXISTS -ne 1 ]]; then
            echo ""::set-output name=prod_exists::0""
            echo ""::set-output name=prod_deployment_name::$RC_DEPLOYMENT_NAME""
          else
            echo ""::set-output name=prod_deployment_name::$(cat prod-deployment-name.txt)""
            echo ""::set-output name=prod_exists::1""
          fi

      - name: Deploy if No Prod Exists
        if: ${{ steps.get_prod_details.outputs.prod_exists == 0 }}
        run: |
          az ml online-deployment create --file ./safe-driver/src/deploy/online-deployment.yaml --endpoint-name $PROD_ENDPOINT_NAME --name $env.RC_DEPLOYMENT_NAME --all-traffic
          az ml online-endpoint update --name $PROD_ENDPOINT_NAME --set tags='{"prod_deployment": "$RC_DEPLOYMENT_NAME"}' 
          az ml online-endpoint invoke --name $PROD_ENDPOINT_NAME --request-file safe-driver/src/deploy/multiple_request.json --deployment-name $RC_DEPLOYMENT_NAME

  deploy-no-traffic:
    name: Deploy with No Traffic and Test
    needs: get-prod-details
    if: ${{ needs.get-prod-details.outputs.prod_exists == 1 }}
    runs-on: ubuntu-latest
    environment: No Traffic
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_CREDS }}

      - name: Install Az ML CLI v2
        run: |
          az extension add --name ml

      - name: Set AML Defaults
        run: |
          az configure --defaults group=${{secrets.AML_WORKSPACE}}  workspace=${{secrets.AML_RESOURCE_GROUP}}
          
      - name: Deploy Managed Service
        id: deploy-endpoint
        env:
          MODEL: 'azureml:${{ env.MODEL_NAME }}:${{ env.MODEL_VERSION }}'
        run: >
          az ml online-deployment create
            --file ./safe-driver/src/deploy/online-deployment.yaml
            --endpoint-name $PROD_ENDPOINT_NAME
            --name $RC_DEPLOYMENT_NAME

      - name: Smoke Test Endpoint
        run: > 
          az ml online-endpoint invoke 
          --name $PROD_ENDPOINT_NAME
          --request-file safe-driver/src/deploy/multiple_request.json
          --deployment-name $RC_DEPLOYMENT_NAME
  
  deploy-10-percent:
    needs: [get-prod-details, deploy-no-traffic]
    if: ${{ needs.get-prod-details.outputs.prod_exists == 1 }}
    name: Deploy to 10% Traffic
    runs-on: ubuntu-latest
    environment: 10% Traffic
    env:
      PROD_DEPLOYMENT_NAME: ${{ needs.get-prod-details.outputs.prod_deployment_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_CREDS }}

      - name: Install Az ML CLI v2
        run: |
          az extension add --name ml

      - name: Set AML Defaults
        run: |
          az configure --defaults group=${{secrets.AML_WORKSPACE}}  workspace=${{secrets.AML_RESOURCE_GROUP}}
      
      - name: Set RC Traffic to 10%
        run: >
          az ml online-endpoint update
            --name $PROD_ENDPOINT_NAME
            --traffic "$PROD_DEPLOYMENT_NAME=90 $RC_DEPLOYMENT_NAME=10"

  deploy-100-percent:
    needs: [get-prod-details, deploy-no-traffic, deploy-10-percent]
    if: ${{ needs.get-prod-details.outputs.prod_exists == 1 }}
    name: Deploy 100% Traffic
    runs-on: ubuntu-latest
    environment: Production
    env:
      PROD_DEPLOYMENT_NAME: ${{ needs.get-prod-details.outputs.prod_deployment_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_CREDS }}

      - name: Install Az ML CLI v2
        run: |
          az extension add --name ml

      - name: Set AML Defaults
        run: |
          az configure --defaults group=${{secrets.AML_WORKSPACE}}  workspace=${{secrets.AML_RESOURCE_GROUP}}
      
      - name: Set RC Traffic to 100%
        run: >
          az ml online-endpoint update
            --name $PROD_ENDPOINT_NAME
            --traffic "$PROD_DEPLOYMENT_NAME=0 $RC_DEPLOYMENT_NAME=100"
            --set tags.prod_deployment=$RC_DEPLOYMENT_NAME
      
      - name: Remove Old Production Deployment
        run: >
          az ml online-deployment delete 
            --name $PROD_DEPLOYMENT_NAME
            --endpoint-name $PROD_ENDPOINT_NAME
            --yes